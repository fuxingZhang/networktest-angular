{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/download/download.css","webpack:///./src/app/download/download.html","webpack:///./src/app/download/download.ts","webpack:///./src/app/latency/latency.css","webpack:///./src/app/latency/latency.html","webpack:///./src/app/latency/latency.ts","webpack:///./src/app/upload/upload.css","webpack:///./src/app/upload/upload.html","webpack:///./src/app/upload/upload.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { latency }  from './latency/latency';\nimport { download }  from './download/download';\nimport { upload }  from './upload/upload';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/latency', pathMatch: 'full' },\n  { path: 'latency', component: latency },\n  { path: 'download', component: download },\n  { path: 'upload', component: upload },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n\n\n\n\n\n","module.exports = \"header {\\r\\n  display: flex;\\r\\n  height: 60px;\\r\\n  line-height: 60px;\\r\\n  background-color: #2a3f54;\\r\\n  color: #fff;\\r\\n}\\r\\nh1{\\r\\n  width: 300px;\\r\\n  font-size: 16px;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  font-weight: normal;\\r\\n}\\r\\nnav{\\r\\n  flex: 1;\\r\\n}\\r\\nnav a{\\r\\n  display: inline-block;\\r\\n  width: 100px;;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  font-size: 14px;\\r\\n  height: 59px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\nnav a:hover{\\r\\n  background-color: rgb(34, 50, 67);\\r\\n}\\r\\nnav a.active{\\r\\n  border-bottom: 2px solid rgb(255, 208, 75);\\r\\n  color: rgb(255, 208, 75);\\r\\n}\"","module.exports = \"<header>\\n  <h1>Network Speed Test</h1>\\n  <nav>\\n    <a routerLink=\\\"/latency\\\" [class.active]=\\\"now == 1\\\" (click)=\\\"now = 1\\\">延迟测试</a>\\n    <a routerLink=\\\"/download\\\" [class.active]=\\\"now == 2\\\" (click)=\\\"now = 2\\\">下载测试</a>\\n    <a routerLink=\\\"/upload\\\" [class.active]=\\\"now == 3\\\" (click)=\\\"now = 3\\\">上传测试</a>\\n  </nav>\\n</header>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  now: number;\n\n  constructor() {\n    this.now = 1;\n  }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\nimport { latency }  from './latency/latency';\nimport { download }  from './download/download';\nimport { upload }  from './upload/upload';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxEchartsModule\n  ],\n  declarations: [\n    AppComponent,\n    latency,\n    download,\n    upload\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'text/plain' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AppService {\n\n  private baseUrl = 'http://localhost:8200/api';  // URL to web api\n\n  constructor(private http: HttpClient) { }\n\n  getLatency (): Observable<any> {\n    return this.http.get(`${this.baseUrl}/latency`, httpOptions)\n      .pipe(\n        tap(res => this.log(res)),\n        catchError(this.handleError('getLatency', []))\n      );\n  }\n\n  download (): Observable<any> {\n    return this.http.get(`${this.baseUrl}/download`, {\n      responseType: 'text',\n      reportProgress: true\n    })\n    .pipe(\n      tap(res => this.log({operation: 'downloading'})),\n      catchError(this.handleError('download', []))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    console.log(`handleError operation: ${operation}`);\n\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: object) {\n    console.log('zfx:', message)\n  }\n}","module.exports = \"section{\\r\\n  margin: 40px 10%;\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"<section>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div echarts [options]=\\\"initOption\\\" [merge]=\\\"updateOption\\\"></div>\\r\\n      <div class=\\\"table\\\">\\r\\n        <div>\\r\\n          <div>当前值</div>\\r\\n          <div>平均值</div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <div>{{now}}</div>\\r\\n          <div>{{average}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"margin-top: 30px;\\\">\\r\\n          <button (click)=\\\"change()\\\" style=\\\"margin-right: 30px;\\\">{{button}}</button>\\r\\n          <button (click)=\\\"clear()\\\">清空</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpRequest, HttpEventType } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.html',\r\n  styleUrls: [ './download.css' ]\r\n})\r\nexport class download implements OnInit {\r\n\r\n  initOption: any;\r\n  button: string;\r\n  running: boolean;\r\n  start: number;\r\n  now: number;\r\n  average: number;\r\n  length: number;\r\n  tableData: [object];\r\n  updateOption: any;\r\n  userCancal: boolean;\r\n  Event:{\r\n    loaded: string\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.button = \"开始\";\r\n    this.running = false;\r\n    this.userCancal = false;\r\n    this.now = 0;\r\n    this.start = 0;\r\n    this.average = 0;\r\n    this.length = 0;\r\n    this.tableData = [\r\n      {\r\n        now: \"0kb/s\",\r\n        average: \"0kb/s\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Date.now) {\r\n      Date.now = function now() {\r\n        return new Date().getTime();\r\n      };\r\n    }\r\n    this.initOption = {\r\n      title: {\r\n        text: 'DownLoad Test',\r\n        subtext: '下载测试'\r\n      },\r\n      tooltip : {\r\n          formatter: \"{a} <br/>{b} : {c}%\"\r\n      },\r\n      toolbox: {\r\n          feature: {\r\n              restore: {},\r\n              saveAsImage: {}\r\n          }\r\n      },\r\n      series: [\r\n        {\r\n          name: '实时速率',\r\n          type: 'gauge',\r\n          z: 3,\r\n          min: 0,\r\n          max: 2000,\r\n          center: ['25%', '55%'],    // 默认全局居中\r\n          detail: {formatter:'{value}kb/s'},\r\n          data: [{value: 0, name: '实时速率'}]\r\n        },\r\n        {\r\n          name: '平均速率',\r\n          type: 'gauge',\r\n          z: 3,\r\n          min: 0,\r\n          max: 2000,\r\n          center: ['75%', '55%'],    // 默认全局居中\r\n          detail: {formatter:'{value}kb/s'},\r\n          data: [{value: 0, name: '平均速率'}]\r\n        }\r\n      ]\r\n    }\r\n    this.updateOption = JSON.parse(JSON.stringify(this.initOption))\r\n  }\r\n\r\n  change(): void{\r\n    if (this.running) {\r\n      this.userCancal = true;\r\n      this.button = \"开始\";\r\n      this.running = false;\r\n      return;\r\n    }\r\n    this.running = true;\r\n    this.button = \"停止\";\r\n    this.userCancal = false;\r\n    this.run();\r\n  }\r\n\r\n  run(): void{\r\n    const start = Date.now();\r\n    this.start = start\r\n    this.download()\r\n    .subscribe(res => {\r\n      console.log('subscribe')\r\n      if(this.userCancal) {\r\n        throw Error('Operation canceled by the user.');\r\n      }\r\n    })\r\n  }\r\n\r\n  clear(): void{\r\n    this.tableData = [\r\n      {\r\n        now: 0,\r\n        average: 0\r\n      }\r\n    ];\r\n    this.now = 0;\r\n    this.average = 0;\r\n    this.button = \"开始\";\r\n    this.running = false;\r\n    this.length = 0;\r\n    this.updateOption.series[0].data[0].value = 0\r\n    this.updateOption.series[1].data[0].value = 0\r\n    this.updateOption =  {\r\n      series: this.updateOption.series\r\n    };\r\n  }\r\n\r\n  download (): Observable<any> {\r\n    const req = new HttpRequest('get', 'http://localhost:8200/api/download', {\r\n      responseType: 'text',\r\n      reportProgress: true\r\n    });\r\n\r\n    return this.http.request(req).pipe(\r\n      map(event => this.getEventMessage(event)),\r\n      tap(res => this.onProgress(res)),\r\n      catchError(this.handleError('download', []))\r\n    );\r\n  }\r\n\r\n  onProgress (res: any): void{\r\n    console.log('downloading') \r\n  }\r\n  \r\n  getEventMessage(event: HttpEvent<any>): void{\r\n    if(event.type == 0) {\r\n      console.log(HttpEventType)\r\n    }\r\n    console.log(event)\r\n    if(event.type == HttpEventType.DownloadProgress) {\r\n      const end = Date.now();\r\n      const ms = end - this.start;\r\n      this.now = Math.floor(event['loaded']*1000/1024/ms);\r\n      this.average = Math.floor((this.average*this.length + this.now) / ++this.length);\r\n      const now = this.now + \"kb/s\";\r\n      const average = this.average + \"kb/s\";\r\n      this.tableData = [\r\n        {\r\n          now,\r\n          average\r\n        }\r\n      ];\r\n      this.updateOption.series[0].data[0].value = this.now\r\n      this.updateOption.series[1].data[0].value = this.average\r\n      this.updateOption =  {\r\n        series: this.updateOption.series\r\n      };\r\n    }\r\n\r\n    if(event.type == HttpEventType.Response) {\r\n      this.button = \"开始\";\r\n      this.running = false;\r\n    }\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    console.log(`handleError operation: ${operation}`);\r\n\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}","module.exports = \"section{\\r\\n  margin: 40px 10%;\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"<section>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div echarts [options]=\\\"initOption\\\" [merge]=\\\"updateOption\\\"></div>\\r\\n    <div class=\\\"table\\\">\\r\\n      <div>\\r\\n        <div>当前值</div>\\r\\n        <div>平均值</div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div>{{now}}</div>\\r\\n        <div>{{average}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-top: 30px;\\\">\\r\\n        <button (click)=\\\"change()\\\" style=\\\"margin-right: 30px;\\\">{{button}}</button>\\r\\n        <button (click)=\\\"clear()\\\">清空</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-latency',\r\n  templateUrl: './latency.html',\r\n  styleUrls: [ './latency.css' ]\r\n})\r\nexport class latency implements OnInit {\r\n\r\n  initOption: any;\r\n  timer: any;\r\n  button: string;\r\n  stop: boolean;\r\n  now: number;\r\n  average: number;\r\n  length: number;\r\n  tableData: [object];\r\n  updateOption: any;\r\n\r\n  constructor(private appService: AppService) {\r\n    this.button = \"开始\";\r\n    this.timer = \"\";\r\n    this.stop = false;\r\n    this.now = 0;\r\n    this.average = 0;\r\n    this.length = 0;\r\n    this.tableData = [\r\n      {\r\n        now: \"0ms\",\r\n        average: \"0ms\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Date.now) {\r\n      Date.now = function now() {\r\n        return new Date().getTime();\r\n      };\r\n    }\r\n    const data = []\r\n    const now = []\r\n    const average = []\r\n    for(let i=0;i<10;i++){\r\n      data.push(' ')\r\n      now.push(0)\r\n      average.push(0)\r\n    }\r\n    this.initOption = {\r\n      title: {\r\n        text: 'Latency Test',\r\n        subtext: '延迟测试'\r\n      },\r\n      tooltip: {\r\n          trigger: 'axis'\r\n      },\r\n      legend: {\r\n          data:['实时值','平均值']\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      toolbox: {\r\n        show: true,\r\n        feature: {\r\n          dataZoom: {\r\n              yAxisIndex: 'none'\r\n          },\r\n          dataView: {readOnly: false},\r\n          magicType: {type: ['line', 'bar']},\r\n          restore: {},\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data,\r\n        boundaryGap: false\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        axisLabel: {\r\n          formatter: '{value}ms'\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          data: now,\r\n          type: 'line',\r\n          smooth: true,\r\n          name:'实时值',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'outside',\r\n              formatter: '{c}ms'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          data: average,\r\n          type: 'line',\r\n          smooth: true,\r\n          name:'平均值',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'outside',\r\n              formatter: '{c}ms'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      animationDuration: 1000,\r\n      animationDurationUpdate: 1000,\r\n      animationEasing:'cubicIn'\r\n    }\r\n    this.updateOption = JSON.parse(JSON.stringify(this.initOption))\r\n  }\r\n\r\n  change(): void{\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      this.timer = \"\";\r\n      this.button = \"开始\";\r\n      this.stop = true;\r\n      return;\r\n    }\r\n    this.stop = false;\r\n    this.button = \"停止\";\r\n    this.run();\r\n  }\r\n\r\n  run(): void{\r\n    if(this.stop) return;\r\n    const start = Date.now();\r\n    this.appService.getLatency()\r\n      .subscribe(res => {\r\n        if(res.length == 0) {\r\n          alert('发送错误')\r\n          this.button = \"开始\";\r\n          this.stop = true;\r\n          return\r\n        }\r\n        console.log('in latency: ', res)\r\n        const end = Date.now();\r\n        this.now = end - start;\r\n        this.average = Math.floor((this.average*this.length + this.now) / (++this.length));\r\n        const now = this.now + \"ms\";\r\n        const average = this.average + \"ms\";\r\n        this.tableData = [\r\n          {\r\n            now,\r\n            average\r\n          }\r\n        ];\r\n        this.updateOption.xAxis.data.shift()\r\n        const date = new Date()\r\n        const time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\r\n        this.updateOption.xAxis.data.push(time)\r\n        this.updateOption.series[0].data.shift()\r\n        this.updateOption.series[1].data.shift()\r\n        this.updateOption.series[0].data.push(this.now)\r\n        this.updateOption.series[1].data.push(this.average)\r\n        this.updateOption =  {\r\n          xAxis: this.updateOption.xAxis,\r\n          series: this.updateOption.series\r\n        };\r\n        if (!this.stop) {\r\n          this.timer = setTimeout(()=> {\r\n            this.run()\r\n          }, 1000);\r\n        }\r\n      });\r\n  }\r\n\r\n  clear(): void{\r\n    this.stop = true;\r\n    this.tableData = [\r\n      {\r\n        now: 0,\r\n        average: 0\r\n      }\r\n    ];\r\n    this.now = 0;\r\n    this.average = 0;\r\n    this.length = 0;\r\n    this.button = \"开始\";\r\n    this.updateOption = JSON.parse(JSON.stringify(this.initOption))\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      this.timer = \"\";\r\n    }\r\n  }\r\n\r\n}","module.exports = \"section{\\r\\n  margin: 40px 10%;\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"<section>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div echarts [options]=\\\"initOption\\\" [merge]=\\\"updateOption\\\"></div>\\r\\n    <div style=\\\"display: flex\\\">\\r\\n      <div style=\\\"flex: 1;\\\">\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <div style=\\\"width: 160px;text-align: right;\\\">文件大小</div>\\r\\n          <div style=\\\"flex: 1;text-align: left;padding-left: 40px;\\\">\\r\\n            <select name=\\\"\\\" id=\\\"\\\">\\r\\n              <option *ngFor=\\\"let option of options\\\" value=\\\"{{option.value}}\\\">{{option.label}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <div style=\\\"width: 160px;text-align: right;\\\">测试次数</div>\\r\\n          <div style=\\\"flex: 1;text-align: left;padding-left: 40px;\\\">\\r\\n            <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"100\\\" [value]=\\\"iterations\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <div style=\\\"width: 160px;text-align: right;\\\">间隔时间</div>\\r\\n          <div style=\\\"flex: 1;text-align: left;padding-left: 40px;\\\">\\r\\n            <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" [value]=\\\"duration\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"flex: 1;\\\">\\r\\n        <div class=\\\"table\\\">\\r\\n          <div>\\r\\n            <div>当前值</div>\\r\\n            <div>平均值</div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <div>{{now}}</div>\\r\\n            <div>{{average}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-top: 30px;\\\">\\r\\n      <button (click)=\\\"change()\\\" style=\\\"margin-right: 30px;\\\">{{button}}</button>\\r\\n      <button (click)=\\\"clear()\\\">清空</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpRequest, HttpEventType } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.html',\r\n  styleUrls: [ './upload.css' ]\r\n})\r\nexport class upload implements OnInit {\r\n\r\n  initOption: any;\r\n  iterations: number;\r\n  duration: number;\r\n  value: string;\r\n  button: string;\r\n  remain: number;\r\n  uploadData: string;\r\n  running: boolean;\r\n  userCancel: boolean;\r\n  now: number;\r\n  start: number;\r\n  average: number;\r\n  length: number;\r\n  tableData: [object];\r\n  updateOption: any;\r\n  options: {\r\n    label: string,\r\n    value: string\r\n  }[];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.iterations = 1;\r\n    this.duration = 1;\r\n    this.value = '1024';\r\n    this.remain = 0;\r\n    this.uploadData = '';\r\n    this.button = \"开始\";\r\n    this.tableData = [\r\n      {\r\n        now: \"0kb/s\",\r\n        average: \"0kb/s\"\r\n      }\r\n    ];\r\n    this.now = 0;\r\n    this.start = 0;\r\n    this.average = 0;\r\n    this.length = 0;\r\n    this.running = false;\r\n    this.userCancel = false;\r\n    this.options = [\r\n      {\r\n        value: '10',\r\n        label: '10kb'\r\n      },{\r\n        value: '100',\r\n        label: '100kb'\r\n      }, {\r\n        value: '1024',\r\n        label: '1mb'\r\n      }, {\r\n        value: '10240',\r\n        label: '10mb'\r\n      }, {\r\n        value: '102400',\r\n        label: '100mb'\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!Date.now) {\r\n      Date.now = function now() {\r\n        return new Date().getTime();\r\n      };\r\n    }\r\n    const data = []\r\n    const now = []\r\n    const average = []\r\n    for(let i=0;i<10;i++){\r\n      data.push(' ')\r\n      now.push(0)\r\n      average.push(0)\r\n    }\r\n    this.initOption = {\r\n      title: {\r\n        text: 'Upload Test',\r\n        subtext: '上传测试'\r\n      },\r\n      tooltip: {\r\n          trigger: 'axis'\r\n      },\r\n      legend: {\r\n          data:['实时值','平均值']\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      toolbox: {\r\n        show: true,\r\n        feature: {\r\n          dataZoom: {\r\n              yAxisIndex: 'none'\r\n          },\r\n          dataView: {readOnly: false},\r\n          magicType: {type: ['line', 'bar']},\r\n          restore: {},\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data,\r\n        boundaryGap: false\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        axisLabel: {\r\n          formatter: '{value}kb/s'\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          data: now,\r\n          type: 'line',\r\n          smooth: true,\r\n          name:'实时值',\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              position: 'top',\r\n              formatter: '{c}kb/s'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          data: average,\r\n          type: 'line',\r\n          smooth: true,\r\n          name:'平均值',\r\n          label: {\r\n            normal: {\r\n              show: false,\r\n              position: 'bottom',\r\n              formatter: '{c}kb/s'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      // animationDuration: 1000,\r\n      // animationDurationUpdate: 1000,\r\n      animationEasing:'cubicIn'\r\n    }\r\n    this.updateOption = JSON.parse(JSON.stringify(this.initOption))\r\n    this.http.get(\"http://localhost:8200/api/upload\", {responseType: 'text'})\r\n    .subscribe(res => {\r\n      console.log(res)\r\n      this.uploadData = res\r\n    })\r\n  }\r\n\r\n  change(): void{\r\n    if (this.running) {\r\n      this.userCancel = true;\r\n      this.button = \"开始\";\r\n      this.running = false;\r\n      return;\r\n    }\r\n    this.userCancel = false;\r\n    this.running = true;\r\n    this.button = \"停止\";\r\n    this.remain = this.iterations;\r\n    this.run();\r\n  }\r\n\r\n  run(): void{\r\n    if(!this.running) return\r\n    let duration = this.duration\r\n    const start = Date.now();\r\n    this.start = start\r\n    let postData = []\r\n    let n = parseInt(this.value)\r\n    for(let i=0;i < n; i++){\r\n      postData.push(this.uploadData)\r\n    }\r\n    let data = new FormData()\r\n    let blob = new Blob(postData,{\r\n      type:'application/octet-stream'\r\n    }) //var aBlob = new Blob( array, options );\r\n    // let file = new File([this.uploadData], \"file.bin\", {\r\n    //   type: 'application/octet-stream',\r\n    // });\r\n    /**\r\n     * The filename reported to the server (a USVString), when a Blob or File is passed as the second parameter. \r\n     * The default filename for Blob objects is \"blob\". \r\n     * The default filename for File objects is the file's filename.\r\n     */\r\n    // data.append('file', blob) \r\n    data.append('file', blob,'upload.bin') \r\n    // data.append('file',file) \r\n    // data.append('file',file,'appendFileName.bin') \r\n    this.upload(data)\r\n    .subscribe(res => {\r\n      console.log('subscribe', res)   // res == undefined\r\n      if(this.userCancel) {\r\n        throw Error('Operation canceled by the user.');\r\n      }\r\n      this.length = 0;\r\n      this.remain--\r\n      if(this.remain == 0) {\r\n        this.button = \"开始\";\r\n        this.running = false\r\n        return\r\n      }\r\n      setTimeout( () => {\r\n        this.run()\r\n      }, duration*1000)\r\n    })\r\n  }\r\n\r\n  clear(): void{\r\n    this.tableData = [\r\n      {\r\n        now: 0,\r\n        average: 0\r\n      }\r\n    ];\r\n    this.now = 0;\r\n    this.average = 0;\r\n    this.button = \"开始\";\r\n    this.length = 0;\r\n    this.running = false;\r\n    const data = [];\r\n    const now = [];\r\n    const average = [];\r\n    for(let i=0;i<10;i++){\r\n      data.push(' ')\r\n      now.push(0)\r\n      average.push(0)\r\n    }\r\n    this.updateOption.xAxis.data = data\r\n    this.updateOption.series[0].data = now\r\n    this.updateOption.series[1].data = average\r\n    this.updateOption =  {\r\n      xAxis: this.updateOption.xAxis,\r\n      series: this.updateOption.series\r\n    };\r\n  }\r\n  upload (data): Observable<any> {\r\n    const req = new HttpRequest('post', 'http://localhost:8200/api/upload', data, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n    });\r\n\r\n    return this.http.request(req).pipe(\r\n      map(event => this.getEventMessage(event)),\r\n      tap(res => this.onProgress(res)),\r\n      catchError(this.handleError('download', []))\r\n    );\r\n  }\r\n\r\n  onProgress (res: any): void{\r\n    console.log('downloading')\r\n  }\r\n  \r\n  getEventMessage(event: HttpEvent<any>): void{\r\n    if(event.type == 0) {\r\n      console.log(HttpEventType)\r\n    }\r\n    console.log(event)\r\n    if(event.type == HttpEventType.UploadProgress) {\r\n      const end = Date.now();\r\n      const ms = end - this.start;\r\n      this.now = Math.floor(event['loaded']*1000/1024/ms);\r\n      this.average = Math.floor((this.average*this.length + this.now) / ++this.length);\r\n      const now = this.now + \"kb/s\";\r\n      const average = this.average + \"kb/s\";\r\n      this.tableData = [\r\n        {\r\n          now,\r\n          average\r\n        }\r\n      ];\r\n      this.updateOption.xAxis.data.shift()\r\n      const date = new Date()\r\n      const time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\r\n      this.updateOption.xAxis.data.push(time)\r\n      this.updateOption.series[0].data.shift()\r\n      this.updateOption.series[1].data.shift()\r\n      this.updateOption.series[0].data.push(this.now)\r\n      this.updateOption.series[1].data.push(this.average)\r\n      this.updateOption =  {\r\n        xAxis: this.updateOption.xAxis,\r\n        series: this.updateOption.series\r\n      };\r\n    }\r\n\r\n    if(event.type == HttpEventType.Response) {\r\n      this.button = \"开始\";\r\n      this.running = false;\r\n    }\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    console.log(`handleError operation: ${operation}`);\r\n\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}